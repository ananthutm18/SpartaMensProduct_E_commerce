@model SpartaMensProduct.Models.Product



@{
    ViewBag.Title = "Create Product";
    var categories = ViewBag.Categories as List<SpartaMensProduct.Models.Category>;
}

<div class="container my-5">
    <div class="card">
        <div class="card-header bg-primary text-white text-center">
            <h2>Create Product</h2>
        </div>
        <div class="card-body">
            @using (Html.BeginForm("Create", "Product", FormMethod.Post, new { enctype = "multipart/form-data" }))
            {
            @Html.AntiForgeryToken()
            <div class="form-horizontal">

                <div class="form-group row">
                    @Html.LabelFor(model => model.ProductName,"Product name", htmlAttributes: new { @class = "control-label col-md-4 font-weight-bold" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.ProductName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ProductName, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group row">
                    @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-4 font-weight-bold" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group row">
                    @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-4 font-weight-bold" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group row">
                    @Html.LabelFor(model => model.Category, htmlAttributes: new { @class = "control-label col-md-4 font-weight-bold" })
                    <div class="col-md-8">



                        <select id="Category" name="Category" class="form-control">
                            <option value="">Select Category</option>
                            @foreach (var category in categories)
                    {
                            <option value="@category.CategoryName">@category.CategoryName</option>
                    }
                        </select>







                    </div>
                </div>

                <div class="form-group row">
                    @Html.LabelFor(model => model.Brand, htmlAttributes: new { @class = "control-label col-md-4 font-weight-bold" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.Brand, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Brand, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group row">
                    @Html.LabelFor(model => model.StockQuantity, htmlAttributes: new { @class = "control-label col-md-4 font-weight-bold" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.StockQuantity, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.StockQuantity, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group row">
                    @Html.Label("Image", htmlAttributes: new { @class = "control-label col-md-4 font-weight-bold" })
                    <div class="col-md-8">
                        <input type="file" id="imageFile" name="imageFile" class="form-control-file" />
                        <div id="imagePreview" class="mt-2"></div>
                        <h4 id="errImg" class="mt-2 text-danger"></h4>
                    </div>
                </div>

                <div class="form-group row">
                    <div class="col-md-8 offset-md-4">
                        <input type="submit" value="Create Product" class="btn btn-primary" />
                    </div>
                </div>

            </div>
            }
        </div>
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/jqueryval")
    <script>
        $(document).ready(function () {
            $('#imageFile').on('change', function () {
                var file = this.files[0];
                var validImageTypes = ['image/jpeg', 'image/png', 'image/gif'];
                var errImg = $('#errImg');
                var preview = $('#imagePreview');

                errImg.text('');
                preview.html('');

                if (file) {
                    if ($.inArray(file.type, validImageTypes) < 0) {
                        errImg.text('Invalid file type. Please select an image (JPEG, PNG, GIF).');
                        $('#imageFile').val(''); 
                        return;
                    }

                    var reader = new FileReader();
                    reader.onload = function (e) {
                        var img = $('<img>').attr('src', e.target.result).css({
                            'max-width': '100px',
                            'max-height': '100px'
                        });
                        preview.append(img);
                    };
                    reader.readAsDataURL(file);
                }
            });
        });
    </script>
}
